{"version":3,"file":"static/js/818.b46cb593.chunk.js","mappings":"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","sources":["webpack://phonebook/./src/component/ContactList/ContactList.module.css?f367","component/ContactList/ContactList.js","webpack://phonebook/./src/component/Filter/Filter.module.css?0051","component/Filter/Filter.js","webpack://phonebook/./src/component/ContactForm/ContactForm.module.css?5532","component/ContactForm/ContactForm.js","webpack://phonebook/./src/component/Phonebook/Phonebook.module.css?f13a","view/ContactsView.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__KgWgl\",\"listItem\":\"ContactList_listItem__P-nyf\",\"deleteButton\":\"ContactList_deleteButton__hbExW\",\"loading\":\"ContactList_loading__+Addo\"};","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./ContactList.module.css\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { phonebookOperations, phonebookSelectors } from \"../../redux/phonebook\";\r\n\r\n// import phonebookOperations from \"../../redux/phonebook/phonebook-operations\";\r\n\r\n// import phonebookSelectors from \"../../redux/phonebook/phonebook-selectors.js\";\r\n\r\nclass ContactList extends Component {\r\n  state = {\r\n    contacts: [],\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.fetchContacts();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <ul className={styles.list}>\r\n        {this.props.isLoadingContacts && (\r\n          <h3 className={styles.loading}>Loading contacts...</h3>\r\n        )}\r\n        {this.props.contacts.map((contact) => (\r\n          <li key={contact.id} className={styles.listItem}>\r\n            {contact.name}: {contact.number}\r\n            <button\r\n              type=\"button\"\r\n              onClick={() => this.props.onDeleteContact(contact.id)}\r\n              className={styles.deleteButton}\r\n            >\r\n              Delete\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isLoadingContacts: phonebookSelectors.getLoading(state),\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  fetchContacts: () => dispatch(phonebookOperations.fetchContacts()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"Filter_label__hd+gc\",\"input\":\"Filter_input__UBh1G\"};","/* eslint-disable no-restricted-globals */\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./Filter.module.css\";\r\n\r\nconst Filter = ({ contactsLength, value, onChange }) => (\r\n  <>\r\n    {contactsLength > 0 && (\r\n      <label className={styles.label}>\r\n        <p>Find contacts by name</p>\r\n\r\n        <input\r\n          placeholder=\"Filter\"\r\n          type=\"text\"\r\n          value={value}\r\n          onChange={(event) => {\r\n            onChange(event.currentTarget.value);\r\n          }}\r\n          className={styles.input}\r\n        />\r\n      </label>\r\n    )}\r\n  </>\r\n);\r\n\r\nFilter.propTypes = {\r\n  contactsLength: PropTypes.number.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"button\":\"ContactForm_button__kjxE1\",\"label\":\"ContactForm_label__s6dF-\",\"input\":\"ContactForm_input__1rmit\"};","import React, { Component } from \"react\";\r\nimport styles from \"./ContactForm.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  handleChange = (event) => {\r\n    const { name, value } = event.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    this.props.onSubmit(this.state);\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit} className={styles.test}>\r\n        <label className={styles.label}>\r\n          <span>Name</span>\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={this.state.name}\r\n            onChange={this.handleChange}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            className={styles.input}\r\n          />\r\n        </label>\r\n\r\n        <br />\r\n        <br />\r\n\r\n        <label className={styles.label}>\r\n          <span>Number</span>\r\n          <input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={this.state.number}\r\n            onChange={this.handleChange}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n            className={styles.input}\r\n          />\r\n        </label>\r\n        <button type=\"submit\" className={styles.button}>\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nContactForm.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactForm;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"app\":\"Phonebook_app__V6IDC\",\"header\":\"Phonebook_header__f-L0D\"};","import React from \"react\";\r\nimport ContactList from \"../component/ContactList\";\r\nimport Filter from \"../component/Filter\";\r\nimport ContactForm from \"../component/ContactForm\";\r\nimport styles from \"../component/Phonebook/Phonebook.module.css\";\r\nimport { connect } from \"react-redux\";\r\n\r\n// import { changeFilter } from \"../../redux/phonebook/phonebook-actions\";\r\n\r\nimport {\r\n  phonebookOperations,\r\n  phonebookSelectors,\r\n  changeFilter,\r\n} from \"../redux/phonebook\";\r\n\r\nconst ContactsView = ({\r\n  getContactsLength,\r\n  visibleContacts,\r\n  filter,\r\n  onChangeFilter,\r\n  onAddContact,\r\n  onDeleteContact,\r\n}) => {\r\n  const contactsLength = visibleContacts.length;\r\n\r\n  return (\r\n    <div className={styles.app}>\r\n      <h1 className={styles.header}>Phonebook</h1>\r\n      <ContactForm onSubmit={onAddContact}></ContactForm>\r\n      {contactsLength > 0 && <h2 className={styles.header}>Contacts</h2>}\r\n      <Filter\r\n        contactsLength={getContactsLength}\r\n        value={filter}\r\n        onChange={onChangeFilter}\r\n      ></Filter>\r\n      <ContactList\r\n        contacts={visibleContacts}\r\n        onDeleteContact={onDeleteContact}\r\n      ></ContactList>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    getContactsLength: phonebookSelectors.getContactsLength(state),\r\n    visibleContacts: phonebookSelectors.getVisibleContacts(state),\r\n    filter: phonebookSelectors.getFilter(state),\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onAddContact: ({ name, number }) =>\r\n      dispatch(phonebookOperations.addContact(name, number)),\r\n    onDeleteContact: (id) => dispatch(phonebookOperations.deleteContact(id)),\r\n    onChangeFilter: (value) => dispatch(changeFilter(value)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsView);\r\n"],"names":["ContactList","state","contacts","this","props","fetchContacts","className","styles","isLoadingContacts","map","contact","name","number","type","onClick","onDeleteContact","id","Component","connect","phonebookSelectors","dispatch","phonebookOperations","contactsLength","value","onChange","placeholder","event","currentTarget","ContactForm","handleChange","setState","handleSubmit","preventDefault","onSubmit","reset","pattern","title","required","getContactsLength","visibleContacts","filter","onAddContact","onChangeFilter","changeFilter","length"],"sourceRoot":""}