{"version":3,"file":"static/js/605.99949704.chunk.js","mappings":"2OACA,EAAsB,0BAAtB,EAAyD,6BAAzD,EAA8F,4BAA9F,EAAkI,4BAAlI,EAAuK,6B,SCIjKA,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GAAAA,SAAAA,IAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,KAAAA,GAAAA,IAAAA,IAAAA,EAAAA,UAAAA,OAAAA,EAAAA,IAAAA,MAAAA,GAAAA,EAAAA,EAAAA,EAAAA,EAAAA,IAAAA,EAAAA,GAAAA,UAAAA,GAwBH,OAxBGA,EAAAA,EAAAA,KAAAA,MAAAA,EAAAA,CAAAA,MAAAA,OAAAA,KACJC,MAAQ,CACNC,KAAM,GACNC,MAAO,GACPC,SAAU,IAHJ,EAMRC,aAAe,SAACC,GACd,MAAwBA,EAAMC,OAAtBL,EAAR,EAAQA,KAAMM,EAAd,EAAcA,MACd,EAAKC,UAAL,UAAiBP,EAAOM,KACzB,EAEDE,aAAe,SAACJ,GACdA,EAAMK,iBACN,EAAKC,MAAMC,iBAAiB,EAAKZ,OACjC,EAAKa,SACN,EAEDA,MAAQ,WACN,EAAKL,SAAS,CACZP,KAAM,GACNC,MAAO,GACPC,SAAU,MAEb,EA+CA,OA/CA,8BAED,WACE,MAAkCW,KAAKd,MAA/BC,EAAR,EAAQA,KAAME,EAAd,EAAcA,SAAUD,EAAxB,EAAwBA,MACxB,OACE,iBAAKa,UAAWC,EAAhB,WACE,eAAID,UAAWC,EAAf,sBACA,kBAAMC,SAAUH,KAAKL,aAAcS,aAAa,MAAhD,WACE,kBAAOH,UAAWC,EAAlB,UACE,kBACEG,UAAQ,EACRC,KAAK,OACLnB,KAAK,OACLM,MAAON,EACPoB,SAAUP,KAAKV,aACfW,UAAWC,EACXM,YAAY,YAGhB,kBAAOP,UAAWC,EAAlB,UACE,kBACEG,UAAQ,EACRC,KAAK,OACLnB,KAAK,QACLM,MAAOL,EACPmB,SAAUP,KAAKV,aACfW,UAAWC,EACXM,YAAY,aAGhB,kBAAOP,UAAWC,EAAlB,UACE,kBACEG,UAAQ,EACRC,KAAK,OACLnB,KAAK,WACLM,MAAOJ,EACPkB,SAAUP,KAAKV,aACfW,UAAWC,EACXM,YAAY,gBAGhB,mBAAQP,UAAWC,EAAeI,KAAK,SAAvC,gCAMP,EAvEGrB,CAAqBwB,EAAAA,WA0ErBC,EAAqB,CACzBZ,iBAAkBa,EAAAA,EAAAA,UAGpB,GAAeC,EAAAA,EAAAA,IAAQ,KAAMF,EAA7B,CAAiDzB","sources":["webpack://phonebook/./src/view/styles/RegisterView.module.scss?38a9","view/RegisterView.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"app\":\"RegisterView_app__1pMUQ\",\"header\":\"RegisterView_header__fOELG\",\"label\":\"RegisterView_label__l3sEt\",\"input\":\"RegisterView_input__BJ3M+\",\"button\":\"RegisterView_button__zfohh\"};","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport authOperations from \"../redux/auth/auth-operations\";\r\nimport styles from \"./styles/RegisterView.module.scss\";\r\n\r\nclass RegisterView extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n  };\r\n\r\n  handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    this.props.onRegisterSubmit(this.state);\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({\r\n      name: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { name, password, email } = this.state;\r\n    return (\r\n      <div className={styles.app}>\r\n        <h1 className={styles.header}>Sign up</h1>\r\n        <form onSubmit={this.handleSubmit} autoComplete=\"off\">\r\n          <label className={styles.label}>\r\n            <input\r\n              required\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={name}\r\n              onChange={this.handleChange}\r\n              className={styles.input}\r\n              placeholder=\"Name\"\r\n            />\r\n          </label>\r\n          <label className={styles.label}>\r\n            <input\r\n              required\r\n              type=\"text\"\r\n              name=\"email\"\r\n              value={email}\r\n              onChange={this.handleChange}\r\n              className={styles.input}\r\n              placeholder=\"Email\"\r\n            />\r\n          </label>\r\n          <label className={styles.label}>\r\n            <input\r\n              required\r\n              type=\"text\"\r\n              name=\"password\"\r\n              value={password}\r\n              onChange={this.handleChange}\r\n              className={styles.input}\r\n              placeholder=\"Password\"\r\n            />\r\n          </label>\r\n          <button className={styles.button} type=\"submit\">\r\n            Register\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  onRegisterSubmit: authOperations.register,\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(RegisterView);\r\n"],"names":["RegisterView","state","name","email","password","handleChange","event","target","value","setState","handleSubmit","preventDefault","props","onRegisterSubmit","reset","this","className","styles","onSubmit","autoComplete","required","type","onChange","placeholder","Component","mapDispatchToProps","authOperations","connect"],"sourceRoot":""}