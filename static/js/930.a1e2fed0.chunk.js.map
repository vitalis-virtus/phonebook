{"version":3,"file":"static/js/930.a1e2fed0.chunk.js","mappings":"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","sources":["webpack://phonebook/./src/component/ContactList/ContactList.module.scss?48bc","webpack://phonebook/./src/component/Contacts/Contacts.module.scss?60b1","component/Contacts/Contacts.js","component/ContactList/ContactList.js","webpack://phonebook/./src/component/Filter/Filter.module.scss?3604","component/Filter/Filter.js","webpack://phonebook/./src/component/ContactForm/ContactForm.module.scss?a0a4","component/ContactForm/ContactForm.js","webpack://phonebook/./src/view/styles/ContactsView.module.scss?1a14","view/ContactsView.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list__wrapper\":\"ContactList_list__wrapper__2tvMl\",\"list__heading\":\"ContactList_list__heading__o2WVF\",\"contacts_wrapper\":\"ContactList_contacts_wrapper__9836K\",\"spinner_Container\":\"ContactList_spinner_Container__k2P73\",\"pagination_wrapper\":\"ContactList_pagination_wrapper__GTnmw\",\"pagination__element\":\"ContactList_pagination__element__wsr8x\",\"pagination__element_active\":\"ContactList_pagination__element_active__717l1\",\"pagination__next\":\"ContactList_pagination__next__dT644\",\"pagination__previous\":\"ContactList_pagination__previous__KFqAj\"};","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"Contacts_list__yBHO5\",\"listItem\":\"Contacts_listItem__ISg6T\",\"deleteButton\":\"Contacts_deleteButton__d25MM\",\"name\":\"Contacts_name__LLd8c\",\"number\":\"Contacts_number__TdDl4\"};","import React from \"react\";\r\nimport styles from \"./Contacts.module.scss\";\r\n\r\nexport default function Contacts({ contacts, onDeleteContact }) {\r\n  return (\r\n    <ul className={styles.list}>\r\n      {contacts.map((contact) => (\r\n        <li key={contact.id} className={styles.listItem}>\r\n          <p className={styles.name}>{contact.name}</p>\r\n          <p className={styles.number}>{contact.number}</p>\r\n          <button\r\n            type=\"button\"\r\n            onClick={() => onDeleteContact(contact.id)}\r\n            className={styles.deleteButton}\r\n          >\r\n            <span>Delete</span>\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./ContactList.module.scss\";\r\n\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport Contacts from \"../Contacts/Contacts\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { phonebookOperations, phonebookSelectors } from \"../../redux/phonebook\";\r\n\r\nconst ContactList = ({\r\n  contacts,\r\n  onDeleteContact,\r\n  isLoadingContacts,\r\n  fetchContacts,\r\n}) => {\r\n  useEffect(() => {\r\n    fetchContacts();\r\n  }, [fetchContacts]);\r\n\r\n  const [currentItems, setCurrentItems] = useState([]);\r\n  const [pageCount, setPageCount] = useState(0);\r\n\r\n  const [itemOffset, setItemOffset] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const endOffset = itemOffset + 9;\r\n    setCurrentItems(contacts.slice(itemOffset, endOffset));\r\n    setPageCount(Math.ceil(contacts.length / 9));\r\n  }, [contacts, itemOffset]);\r\n\r\n  const handlePageClick = (event) => {\r\n    const newOffset = (event.selected * 9) % contacts.length;\r\n    setItemOffset(newOffset);\r\n  };\r\n\r\n  return (\r\n    <div className={styles.list__wrapper}>\r\n      <div className={styles.list__heading}>\r\n        <h4>Name</h4>\r\n        <h4>Phone</h4>\r\n      </div>\r\n\r\n      {isLoadingContacts && (\r\n        <div className={styles.spinner_Container}>\r\n          <ClipLoader loading={true} cssOverride={{}} size={100} />\r\n        </div>\r\n      )}\r\n      {contacts && (\r\n        <div className={styles.contacts_wrapper}>\r\n          <Contacts contacts={currentItems} onDeleteContact={onDeleteContact} />\r\n          <ReactPaginate\r\n            breakLabel=\"...\"\r\n            nextLabel=\"next >\"\r\n            onPageChange={handlePageClick}\r\n            pageRangeDisplayed={5}\r\n            pageCount={pageCount}\r\n            previousLabel=\"< previous\"\r\n            renderOnZeroPageCount={null}\r\n            className={styles.pagination_wrapper}\r\n            pageClassName={styles.pagination__element}\r\n            activeLinkClassName={styles.pagination__element_active}\r\n            previousClassName={styles.pagination__previous}\r\n            nextClassName={styles.pagination__next}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isLoadingContacts: phonebookSelectors.getLoading(state),\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  fetchContacts: () => dispatch(phonebookOperations.fetchContacts()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","// extracted by mini-css-extract-plugin\nexport default {\"filter__wrapper\":\"Filter_filter__wrapper__m8eRM\",\"header\":\"Filter_header__ESLtA\",\"label\":\"Filter_label__OZrgp\",\"input\":\"Filter_input__vVlXA\"};","/* eslint-disable no-restricted-globals */\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./Filter.module.scss\";\r\n\r\nconst Filter = ({ contactsLength, value, onChange }) => (\r\n  <>\r\n    {contactsLength > 0 && (\r\n      <div className={styles.filter__wrapper}>\r\n        <h3 className={styles.header}>Find contacts by name</h3>\r\n        <form className={styles.form}>\r\n          <label className={styles.label}>\r\n            <input\r\n              placeholder=\"Filter\"\r\n              autoComplete=\"off\"\r\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n              required\r\n              type=\"text\"\r\n              value={value}\r\n              onChange={(event) => {\r\n                onChange(event.currentTarget.value);\r\n              }}\r\n              className={styles.input}\r\n            />\r\n          </label>\r\n        </form>\r\n      </div>\r\n    )}\r\n  </>\r\n);\r\n\r\nFilter.propTypes = {\r\n  contactsLength: PropTypes.number.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"contact_form\":\"ContactForm_contact_form__HCH9P\",\"button\":\"ContactForm_button__UjJGT\",\"label\":\"ContactForm_label__Zf+Tp\",\"input\":\"ContactForm_input__42fA3\"};","import React, { Component } from \"react\";\r\nimport styles from \"./ContactForm.module.scss\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  handleChange = (event) => {\r\n    const { name, value } = event.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    this.props.onSubmit(this.state);\r\n    if (this.props.onCloseModal) {\r\n      this.props.onCloseModal();\r\n    }\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className={styles.contact_form}>\r\n        <h2>Add new contact</h2>\r\n        <form onSubmit={this.handleSubmit} className={styles.test}>\r\n          <label className={styles.label}>\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={this.state.name}\r\n              onChange={this.handleChange}\r\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n              required\r\n              className={styles.input}\r\n              placeholder=\"Name\"\r\n              autoComplete=\"off\"\r\n            />\r\n          </label>\r\n\r\n          <label className={styles.label}>\r\n            <input\r\n              type=\"tel\"\r\n              name=\"number\"\r\n              value={this.state.number}\r\n              onChange={this.handleChange}\r\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n              required\r\n              className={styles.input}\r\n              placeholder=\"Number\"\r\n              autoComplete=\"off\"\r\n            />\r\n          </label>\r\n          <button type=\"submit\" className={styles.button}>\r\n            Add contact\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nContactForm.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactForm;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"app\":\"ContactsView_app__8ulAv\",\"edit_field\":\"ContactsView_edit_field__yQNnN\",\"edit_field_mobile\":\"ContactsView_edit_field_mobile__7xxxs\",\"add_contact\":\"ContactsView_add_contact__sRdfB\",\"filter_contact\":\"ContactsView_filter_contact__Y1cFw\",\"Modal\":\"ContactsView_Modal__r+-Kd\",\"Overlay\":\"ContactsView_Overlay__FrkPI\"};","import React, { useState } from \"react\";\r\nimport ContactList from \"../component/ContactList\";\r\nimport Filter from \"../component/Filter\";\r\nimport ContactForm from \"../component/ContactForm\";\r\nimport { connect } from \"react-redux\";\r\nimport styles from \"./styles/ContactsView.module.scss\";\r\n\r\nimport {\r\n  phonebookOperations,\r\n  phonebookSelectors,\r\n  changeFilter,\r\n} from \"../redux/phonebook\";\r\n\r\nimport Modal from \"react-modal\";\r\nModal.setAppElement(\"#root\");\r\n\r\nconst ContactsView = ({\r\n  getContactsLength,\r\n  visibleContacts,\r\n  filter,\r\n  onChangeFilter,\r\n  onAddContact,\r\n  onDeleteContact,\r\n}) => {\r\n  const [modalIsOpen, setModalIsOpen] = useState(false);\r\n\r\n  const openModal = () => setModalIsOpen(true);\r\n  const closeModal = () => setModalIsOpen(false);\r\n\r\n  return (\r\n    <div id=\"ContactsView\" className={styles.app}>\r\n      <div className={styles.edit_field}>\r\n        <ContactForm onSubmit={onAddContact}></ContactForm>\r\n        <Filter\r\n          contactsLength={getContactsLength}\r\n          value={filter}\r\n          onChange={onChangeFilter}\r\n        ></Filter>\r\n      </div>\r\n\r\n      <div className={styles.edit_field_mobile}>\r\n        <button className={styles.add_contact} onClick={openModal}>\r\n          +\r\n        </button>\r\n        <Filter\r\n          contactsLength={getContactsLength}\r\n          value={filter}\r\n          onChange={onChangeFilter}\r\n        ></Filter>\r\n      </div>\r\n\r\n      <Modal\r\n        isOpen={modalIsOpen}\r\n        onRequestClose={closeModal}\r\n        className={styles.Modal}\r\n        contentLabel=\"Example Modal\"\r\n        overlayClassName={styles.Overlay}\r\n      >\r\n        <ContactForm\r\n          onCloseModal={closeModal}\r\n          onSubmit={onAddContact}\r\n        ></ContactForm>\r\n      </Modal>\r\n\r\n      <ContactList\r\n        contacts={visibleContacts}\r\n        onDeleteContact={onDeleteContact}\r\n      ></ContactList>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    getContactsLength: phonebookSelectors.getContactsLength(state),\r\n    visibleContacts: phonebookSelectors.getVisibleContacts(state),\r\n    filter: phonebookSelectors.getFilter(state),\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onAddContact: ({ name, number }) => {\r\n      return dispatch(phonebookOperations.addContact(name, number));\r\n    },\r\n    onDeleteContact: (id) => dispatch(phonebookOperations.deleteContact(id)),\r\n    onChangeFilter: (value) => dispatch(changeFilter(value)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsView);\r\n"],"names":["Contacts","contacts","onDeleteContact","className","styles","map","contact","name","number","type","onClick","id","connect","state","isLoadingContacts","phonebookSelectors","dispatch","fetchContacts","phonebookOperations","useEffect","useState","currentItems","setCurrentItems","pageCount","setPageCount","itemOffset","setItemOffset","endOffset","slice","Math","ceil","length","loading","cssOverride","size","breakLabel","nextLabel","onPageChange","event","newOffset","selected","pageRangeDisplayed","previousLabel","renderOnZeroPageCount","pageClassName","activeLinkClassName","previousClassName","nextClassName","contactsLength","value","onChange","placeholder","autoComplete","pattern","title","required","currentTarget","ContactForm","handleChange","setState","handleSubmit","preventDefault","props","onSubmit","onCloseModal","reset","this","Component","Modal","getContactsLength","visibleContacts","filter","onAddContact","onChangeFilter","changeFilter","modalIsOpen","setModalIsOpen","closeModal","isOpen","onRequestClose","contentLabel","overlayClassName"],"sourceRoot":""}